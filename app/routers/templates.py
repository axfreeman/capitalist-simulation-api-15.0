"""Endpoints for templates.
"""
from typing import List
from fastapi import APIRouter, Depends, Security
from sqlalchemy.orm import Session

from app.schemas import SimulationBase
from ..database import get_session
from ..authorization.auth import get_api_key
from ..models import Simulation, User

router = APIRouter(prefix="/templates", tags=["Templates"])

@router.get("/templates",response_model=List[SimulationBase])
def get_simulations(
    u:User = Security(get_api_key),
    session: Session = Depends (get_session)
    )->List[Simulation]:
    """Retrieve all templates. A user can clone one of them to create an
    actual simulation. 

    Though api_key is used to authenticate the request, any user can
    access this endpoint.

        u: the user's name, obtained from the api key.
    
        Exceptions: authentication error if the key is not valid.
    """
    simulations=session.query(Simulation).filter(Simulation.state=="TEMPLATE")
    return simulations

@router.get("/template/{id}",response_model=SimulationBase)
def get_simulation(
    id:str,
    u: User = Security(get_api_key),
    session: Session = Depends (get_session)
    )->Simulation:
    """Retrieve the template whose primary key is id. 
    
    A user can clone this template to create an actual simulation.

    Though api_key is used to authenticate the request, any user can
    access this endpoint.

        id: primary key of the Template.

        u: the user's name, obtained from the api key.
    
        Returns: authentication error (generated by fastAPI) if the key 
        is not valid.

        Returns: None if there is no such template
    """
    simulations=session.query(Simulation).filter(Simulation.id==int(id)).first()
    return simulations

